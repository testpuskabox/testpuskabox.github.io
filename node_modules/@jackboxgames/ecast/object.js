class ObjectEntity {
    constructor(options) {
        this.from = options.from;
        this.key = options.key;
        this.val = options.val;
        this.version = options.version;
        this.meta = options.meta || {};
        
        if (options.acl) {
            this.acl = options.acl;
        }
    }

    whenReceived(client) {
        client.entities[this.key] = this;
    }

    toString() {
        return `ObjectEntity{\n\tkey:${this.key}\n\tvalue: ${JSON.stringify(this.val)}\n\tmeta:${JSON.stringify(this.meta)}\n}`;
    }

    // toBlob converts the ObjectEntity to a "blob" as it was used in blobcast.
    toBlob() {
        return this.val;
    }
}

class ObjectEcho {
    constructor(options) {
        this.message = options.message;
    }

    toString() {
        return `ObjectEcho{message: ${this.message}}`;
    }
}

module.exports = {
    ObjectEntity,
    ObjectEcho,
};
