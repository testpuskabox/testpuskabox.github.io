class CreateRoomReply {
    constructor(options) {
        this.code = options.code;
        this.token = options.token;
        this.host = options.host;
    }
}

class GetRoomReply {
    constructor(options) {
        this.appId = options.appId;
        this.appTag = options.appTag;
        this.audienceEnabled = options.audienceEnabled;
        this.code = options.code;
        this.host = options.host;
        this.audienceHost = options.audienceHost;
        this.locked = options.locked;
        this.full = options.full;
        this.maxPlayers = options.maxPlayers;
        this.minPlayers = options.minPlayers;
        this.moderationEnabled = options.moderationEnabled;
        this.passwordRequired = options.passwordRequired;
        this.twitchLocked = options.twitchLocked;
        this.locale = options.locale;
        this.keepalive = options.keepalive;
        this.controllerBranch = options.controllerBranch;
    }
}

class GetAudienceReply {
    constructor(options) {
        this.connections = options.connections;
    }
}

class RoomExit {
    constructor(options) {
        this.cause = options.cause;
    }

    whenReceived(client) {
        client.disconnect();
    }
}

class RoomLock {
}

module.exports = {
    CreateRoomReply,
    GetRoomReply,
    GetAudienceReply,
    RoomExit,
    RoomLock,
};
