class NumberEntity {
    constructor(options) {
        this.from = options.from;
        this.key = options.key;
        this.val = options.val;
        this.restrictions = options.restrictions;
        this.version = options.version;
        this.meta = options.meta || {};
        
        if (options.acl) {
            this.acl = options.acl;
        }
    }

    whenReceived(client) {
        // don't overwrite restrictions, if it's only the value that's being updated
        if (client.entities[this.key] && client.entities[this.key] instanceof NumberEntity) {
            if (!this.restrictions) {
                client.entities[this.key].val = this.val;
                client.entities[this.key].meta = this.meta;
                client.entities[this.key].version = this.version;
                client.entities[this.key].from = this.from;

                return;
            }
        }

        client.entities[this.key] = this;
    }
    
    toString() {
        return `NumberEntity{\n\tkey:${this.key}\n\tval: ${this.val}\n\trestrictions: ${JSON.stringify(this.restrictions)}\n\tmeta: ${JSON.stringify(this.meta)}\n}`;
    }
}


module.exports = {
    NumberEntity,
};
